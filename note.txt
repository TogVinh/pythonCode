>> printf

    || printf( object, sep = seperator, end ) ||

- object :  các đối tượng trong python
- sep : phân cách giữa các đôi tượng khi in, nếu không có tham số này thì mặc định là dấu cách
- end : chỉ ra kí tự được in ở cuối của dòng, nếu không có tham số này thì mặc định sẽ là dấu xuống dòng

>> Python syntax và chú thích
- không cần dấu chấm phẩy
- python sử dụng thụt lề để chỉ ra một khối lệnh mới
- chú thích 
    || # ||
- chú thích nhiều dòng 
    """
    this is 
    comment
    block
    """

>> Biến và kiểu dữ liệu
- vùng chứa
- dynamic typing
- để biết kiểu dữ liệu có thể dùng hàm type()

- tiền tố
    + 0b : nhị phân
    + 0o : hệ octa
    + 0x : hệ thập lục

- giá trị lớn nhất có thể lưu của số thực là 1.8 * 10^308, giá trị lớn lớn số này là infinity

- ép kiểu : 
    + int() : ép thành int
    + float() : ép thành float

* kiểu chuỗi trong Python
    - là kiểu dữ liệu được đặt trong ngoặc đơn hoặc ngoặc kép
    - chuỗi nhiều dòng
    - một số ký hiệu đặc biệt trong chuỗi
        + alert : \a 
        + backspace \b
        + Newline \n 
        + tab \t 
        + \' \" \\
    - toán tử in :
        + kiểm tra một chuỗi có nằm bên trong một chuỗi khác hay không
        + nhận về giá trị true hoặc false
    - truyền giá trị
        a  = ' My name is %s, %s year old ' %('arg 1',' arg 2')
    - chuỗi f string
        k = Kteam
        result = f'{k} - test f sting'
        print(result) => Kteam - test f string

    - phương thức cho chuỗi
        + name.capitalize : viết hoa chữ cái đầu
        + name.upper
        + name.lower
        + name.swapcase : chữ viết thường về chuỗi viết hoa, chuỗi viết hoa thành chuỗi viết thường
        + name.title : viết hoa các ký tự đầu tiên của chữ cái
        + name.center(width, fillchange)
    - phương thức xử lý cho chuỗi
        + encode : mã hóa theo chuẩn
        + join
        + replace
        + strip : loại bỏ ký tự đầu đầu và cuối
        + split() : tạo thành kiểu list
        + partition() : tạo thành kiểu dữ liệu tupple
        + find() : trả về vị trí tìm thấy
        + index() : sẽ tạo ra lõi nếu k tìm thấy


>> toán tử
* toán tử gán
    a = b
    a, b, c = 100, 200, 300

* toán tử toán học
    + - * /
    // chia nguyên
    % chia dư
    ** lũy thừa

* toán tử so sánh
    ==  >  >=  < <= !=

* toán tử logic
    and 
    or
    not

* toán tử nhận dạng
    dùng is
    ex 
        a = [1 , 2 , 3]
        b = [1, 2, 3]
        printf(a is b) = false
        printf ( a == b) = true

* toán tử thành viên
    - toán tử in

* toán tử bit

>> Toán tử rẽ nhánh

* if else
    if condition:
        #code
    elif condition: 
        #code
    else

* shoerhand if ( toan tử 3 ngôi )
    variable = statment if condition else statment


>> For
    for var in range()
        #code
    else : 
        in ra gì đó
    